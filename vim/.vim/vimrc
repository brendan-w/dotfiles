
set nocompatible
set number " show line numbers
set showcmd " show me commands as I type them
set expandtab " uses spaces when TAB is pressed
set shiftwidth=4 " number of spaces that TABs get expanded to
set softtabstop=4 " remove 4 spaces for a tab when BACKSPACE is pressed
set tabstop=4 " width of actual TAB characters
set autoindent
set backspace=indent,eol,start
set encoding=utf-8
set ruler " show cursor coordinates
set laststatus=2 " always show statusline
set cursorline " illuminate the cursors current position
set noswapfile
set backupdir=~/.vim/tmp " dump everything in a temp directory
set directory=~/.vim/tmp
set undodir  =~/.vim/tmp
set copyindent
set ttyfast " it's ok to send lots of redrawing commands
set incsearch " search as you type, ENTER will accept, ESC will stop
set ignorecase smartcase " ignore case when searching, unless there is an uppercase character
set whichwrap+=<,>,h,l,[,] " make Left and Right movement keys wrap around the ends of lines
set scrolloff=100 " always keep N lines around the cursor
set shortmess+=I " don't show the intro message
set listchars=tab:\|\ ,trail:Â· " show tabs and trailing whitespace as printed characters
set list
" set completeopt=longest,menuone

" ==================== vim-plug ======================

call plug#begin('~/.vim/plugged')

Plug 'jiangmiao/auto-pairs'         " automatically creates the closing paren, bracket, etc...
Plug 'edsono/vim-matchit'           " allows '%' command to jump between opening/closing HTML tags
Plug 'scrooloose/nerdcommenter'     " commenting
Plug 'terryma/vim-multiple-cursors' " multiple cursors
Plug 'scrooloose/nerdtree'
" Plug 'chriskempson/base16-vim'
" Plug 'vim-scripts/closetag.vim' " allows 'CTRL-_' to close the currently opened HTML tag
" Plug 'bling/vim-airline'

call plug#end()

" ====================== Colors =======================

set t_Co=256 " enable 256 colors
syntax on
colorscheme custom

" ====================== Controls ======================

" In many terminal emulators the mouse works just fine, so I enable it.
if has('mouse')
    set mouse=a
endif

" hack, to prevent my ALT key from escaping back to normal mode
let c='a'
while c <= 'z'
    exec "set <A-".c.">=\e".c
    exec "imap \e".c." <A-".c.">"
    let c = nr2char(1+char2nr(c))
endw

set ttimeout
set ttimeoutlen=0

imap jj <Esc>

" line swapping
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
inoremap <C-j> <Esc>:m .+1<CR>==gi
inoremap <C-k> <Esc>:m .-2<CR>==gi
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv

" go to next and prev occurences of a word
inoremap <C-d> <C-o>*
inoremap <A-d> <C-o>#

" use Shift-Tab to insert a literal tab
inoremap <S-Tab> <C-V><Tab>

" ---------------------- F Keys ----------------------

" use F1 to save and exit
nmap <F1> :wq<CR>
imap <F1> <ESC>:wq<CR>
vmap <F1> <ESC>:wq<CR>

" use F2 to run a normal command from insert mode
" also prevent it from openning the help
nmap <F2> <NOP>
imap <F2> <C-o>
vmap <F2> <NOP>

" use F3 to toggle paste mode
set pastetoggle=<F3>

" use F12 to force close, without saving
nmap <F12> :q!<CR>

" ====================================================

" be a text editor when you wake up
" also, piss off every VIM user who touches my computer
startinsert
